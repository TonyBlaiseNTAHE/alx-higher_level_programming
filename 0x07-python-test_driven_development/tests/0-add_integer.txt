# The ``0-add_integer`` module

# Importing the function add_integer
>>> add_integer = __import__('0-add_integer').add_integer

# Valid input: integer arguments
>>> add_integer(1, 2)
3

# Valid input: integer and float arguments (should be converted to integers)
>>> add_integer(4, 2.5)
6

# Valid input: single integer argument (default value for b is used)
>>> add_integer(2)
100

# Valid input: negative integers
>>> add_integer(2, -10)
-8
>>> add_integer(-2, 10)
8

# Invalid input: non-integer second argument (TypeError expected)
>>> add_integer(2, True)
Traceback (most recent call last):
  ...
TypeError: b must be an integer

# valid input: float as first argument 
>>> add_integer(2.56, 67)
69

# Invalid input: string as second argument (TypeError expected)
>>> add_integer(2.56, 'tony')
Traceback (most recent call last):
  ...
TypeError: b must be an integer

# Invalid input: undefined variable 'j' (NameError expected)
>>> add_integer(2*j, -178.9)
Traceback (most recent call last):
  ...
NameError: name 'j' is not defined

# Invalid input: complex number as first argument (TypeError expected)
>>> add_integer(5j, -178.9)
Traceback (most recent call last):
  ...
TypeError: a must be an integer

# Valid input: negative float as second argument (should be converted to integer)
>>> add_integer(-5, -178.9)
-183

# Valid input: negative float as second argument (should be converted to integer)
>>> add_integer(-5, 178.9)
173

# valid input: integer  arguments
>>> add_integer(-5-4)
89

# Valid input: single integer argument (default value for b is used)
>>> add_integer(54)
152

# Valid input: single integer argument (default value for a is used)
>>> add_integer(0)
98

# Valid input: zero as both arguments
>>> add_integer(0, 0)
0

# Valid input: zero as first argument, negative integer as second argument
>>> add_integer(0, -23)
-23

# Invalid input: missing arguments (TypeError expected)
>>> add_integer(*)
Traceback (most recent call last):
  ...
SyntaxError: invalid syntax

# Invalid input: undefined variable (NameError expected)
>>> add_integer(a)
Traceback (most recent call last):
  ...
NameError: name 'a' is not defined

#Invalid input: passing more than two arguments (TypeError expected)

>>> add_integer(None)    
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "<stdin>", line 3, in add_integer
TypeError: a must be an integer
>>> add_integer(None, None)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "<stdin>", line 3, in add_integer
TypeError: a must be an integer
>>> add_integer(None, None, None)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given
>>> add_integer('5')             
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "<stdin>", line 3, in add_integer
TypeError: a must be an integer
>>> add_integer('5', '9')
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "<stdin>", line 3, in add_integer
TypeError: a must be an integer
>>> add_integer()        
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: add_integer() missing 1 required positional argument: 'a'
>>> add_integer(' ')
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "<stdin>", line 3, in add_integer
TypeError: a must be an integer
>>> add_integer('2', '6', '8')
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given
>>> add_integer(2, '6')       
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "<stdin>", line 5, in add_integer
TypeError: b must be an integer
>>> add_integer(-2, '6')
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "<stdin>", line 5, in add_integer
TypeError: b must be an integer
>>> add_integer(2.25, '6')
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "<stdin>", line 5, in add_integer
TypeError: b must be an integer
>>> add_integer(-2.25, '6')
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "<stdin>", line 5, in add_integer
TypeError: b must be an integer
>>> add_integer('9', 6)    
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "<stdin>", line 3, in add_integer
TypeError: a must be an integer
>>> add_integer('9', -6)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "<stdin>", line 3, in add_integer
TypeError: a must be an integer
>>> add_integer('9', 6.56)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "<stdin>", line 3, in add_integer
TypeError: a must be an integer
>>> add_integer('9', -6.56)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "<stdin>", line 3, in add_integer
TypeError: a must be an integer
>>> add_integer(8, 5, 7)   
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given
>>> add_integer(8.25, 5.4, 7.3)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given
>>> add_integer(-8, -5, -7)    
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given
>>> add_integer(-8.25, -5.4, -7.3)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given
>>> add_integer(5*3) 
113
>>> add_integer(5*3,)
113
>>> add_integer(-6.3, -8.52)
-14
>>> add_integer(6.3, 8.52)  
14
>>> add_integer(6.3, -8.52)
-2
>>> add_integer(-6.3, 8.52)
2
>>> add_integer(8.52)      
106
>>> add_integer(-8.52)
90
>>> add_integer(5, 8.52)
13
>>> add_integer(5.65, 8)   
13
>>> add_integer(5, -8.25)
-3
>>> add_integer(float("nan"))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/tonyntahe/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 16, in add_integer
    return int(a) + int(b)
ValueError: cannot convert float NaN to integer
>>> add_integer(float("-inf"))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/tonyntahe/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 16, in add_integer
    return int(a) + int(b)
OverflowError: cannot convert float infinity to integer
>>> add_integer(float("-inf"), 1)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/tonyntahe/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 16, in add_integer
    return int(a) + int(b)
OverflowError: cannot convert float infinity to integer
>>> add_integer({}, 4)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/tonyntahe/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 11, in add_integer
    raise TypeError("a must be an integer")
TypeError: a must be an integer
>>> add_integer([], 4)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/tonyntahe/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 11, in add_integer
    raise TypeError("a must be an integer")
TypeError: a must be an integer
>>> add_integer(4, {})
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/tonyntahe/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 14, in add_integer
    raise TypeError("b must be an integer")
TypeError: b must be an integer
>>> add_integer(4, [])
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/tonyntahe/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 14, in add_integer
    raise TypeError("b must be an integer")
TypeError: b must be an integer
