""""testing file"

>>> MyList = __import__('1-my_list').MyList
>>> my_list = MyList()
>>> my_list.append(1)
>>> my_list.append(4)
>>> my_list.append(2)
>>> my_list.append(3)
>>> my_list.append(5)
>>> print(my_list)
[1, 4, 2, 3, 5]
>>> my_list.print_sorted()
[1, 2, 3, 4, 5]
>>> my_list = MyList()
>>> print(my_list)
[]
>>> my_list = MyList()
>>> my_list.append(1)
>>> my_list.append(-2)
>>> my_list.append(-3)
>>> my_list.append(-5)
>>> my_list.append(0)
>>> print(my_list)
[1, -2, -3, -5, 0]
>>> my_list.print_sorted()
[-5, -3, -2, 0, 1]
>>> my_list = MyList()
>>> my_list.append('t')
>>> my_list.append('2')
>>> my_list.append('s')
>>> my_list.append(4)
>>> my_list.append(-1)
>>> print(my_list)
['t', '2', 's', 4, -1]
>>> my_list.print_sorted()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "<stdin>", line 10, in print_sorted
TypeError: '<' not supported between instances of 'int' and 'str'
>>> my_list = MyList()
>>> my_list.append('a')
>>> my_list.append('b')
>>> my_list.append('c')
>>> my_list.append('d')
>>> print(my_list)
['a', 'b', 'c', 'd']
>>> my_list.print_sorted()
['a', 'b', 'c', 'd']
>>> my_list = MyList()
>>> my_list.append((1,2))
>>> my_list.append((1,))
>>> my_list.append(())
>>> my_list.append(-2)
>>> print(my_list)
[(1, 2), (1,), (), -2]
>>> my_list.print_sorted()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "<stdin>", line 10, in print_sorted
TypeError: '<' not supported between instances of 'int' and 'tuple'
>>> my_list = MyList()
>>> my_list.append('I')
>>> my_list.append('Love')
>>> my_list.append('ALX')
>>> print(my_list)
['I', 'Love', 'ALX']
>>> my_list.print_sorted()
['ALX', 'I', 'Love']
>>> my_list = MyList()
>>> my_list.append({1: 'Mike'})
>>> my_list.append({2: 'jimmy'})
>>> my_list.append({3: 'Harry'})
>>> print(my_list)
[{1: 'Mike'}, {2: 'jimmy'}, {3: 'Harry'}]
>>> my_list.print_sorted()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "<stdin>", line 10, in print_sorted
TypeError: '<' not supported between instances of 'dict' and 'dict'
>>> my_list = MyList()                     
>>> my_list.append(24)                     
>>> print(my_list)
[24]
>>> print(my_list.print_sorted())
[24]
None
>>> my_list.print_sorted()       
[24]
>>> my_list = MyList()
>>> issubclass(MyList, list)
True